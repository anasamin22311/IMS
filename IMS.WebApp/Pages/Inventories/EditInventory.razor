@page "/editinventory/{invId:int}"
<h3>Edit Inventory</h3>
@inject NavigationManager NavigationManager
@inject IViewInventoryByIdUseCase ViewInventoryByIdUseCase
@inject IEditInventoriesUseCase EditInventoriesUseCase
@if (this.inventory != null)
{
    <EditForm Model="inventory" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div class="form-group">
            <label for="name">inventory Name</label>
            <InputText id="name" @bind-Value="inventory.InventoryName" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="qty">inventory Quantity</label>
            <InputNumber id="qty" @bind-Value="inventory.Quantity" class="form-control"></InputNumber>
        </div>
        <div class="form-group">
            <label for="price">inventory Price</label>
            <InputNumber id="price" @bind-Value="inventory.Price" class="form-control"></InputNumber>
        </div>
        <br>
        <button type = "submit" class = "btn btn-primary">Save</button>
    </EditForm>
    
}

@code {
    [Parameter]
    public int InvId { get; set; }
    private Inventory? inventory;
    protected override async Task OnInitializedAsync()
    {
        this.inventory = await ViewInventoryByIdUseCase.ExecuteAsync(InvId);    
    }
    public async Task OnValidSubmit()
    {
        if (this.inventory != null)
        {
            await EditInventoriesUseCase.ExcuteAsync(this.inventory);
            NavigationManager.NavigateTo("/inventories");
        }
    }
}

