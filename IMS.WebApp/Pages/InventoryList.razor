@page "/inventories"
@inject NavigationManager NavigationManager 
@inject IViewInventoryByNameUseCase ViewInventoryByNameUseCase

<h3>InventoryList</h3>
<br />
<ViewInventoriesComponent onSearchInventories = "onSearchInventories"></ViewInventoriesComponent>
@if (listInventories != null)
{
    <table class ="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Quantity</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var inv in this.listInventories)
            {
                <tr>
                    <td>@inv.InventoryName</td>
                    <td>@inv.Quantity</td>
                    <td>@inv.Price.ToString("c")</td>
                    <td>
                        <button type = "button" class = "btn btn-light" @onclick = "@(()=> EditInventory(inv.InventoryId))">Edit</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<button type = "button" class = "btn btn-primary" @onclick = "AddInventory"> Add Inventory</button>
@code 
{
    private List<Inventory>? listInventories;
    protected override async Task OnInitializedAsync()
    {
        var invs =await ViewInventoryByNameUseCase.ExcuteAsync("shit");
        this.listInventories = invs.ToList(); 
    }
    private void onSearchInventories(List<Inventory> inventories)
    {
        listInventories = inventories;
    }
    public void AddInventory()
    {
        NavigationManager.NavigateTo("/addinventory");
    }
    public void EditInventory(int InvId)
    {
        NavigationManager.NavigateTo($"/editinventory/{InvId}");
    }
}
